name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run Unit Tests
        run: npm test


  build-app:
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - name: Skipped - Build Application
        run: echo "Build step is currently skipped."

  release-app-stage:
    runs-on: ubuntu-latest
    needs: [unit-test, build-app]
    steps:
      - name: Skipped - Release to Staging
        run: echo "Release to staging is currently skipped."

  e2e-test:
    runs-on: ubuntu-latest
    needs: [unit-test, build-app, release-app-stage]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Clean previous build
        run: rm -rf .next dist build

      - name: Install dependencies
        run: npm install

      - name: Install Static Server
        run: npm install -g serve

      - name: Build Application
        run: npm run build

      - name: Start Static Server
        run: serve -s build -l 3000 &
        env:
          CI: true

      - name: Wait for app to be ready
        run: npx wait-on http://localhost:3000 --timeout=60000 --interval=1000 --verbose

      - name: Run Cypress Tests
        run: npm run cypress:run > full-output.log 2>&1

      - name: Extract errors from Cypress log
        if: always()
        run: |
        grep -iE "fail|error|timed out|expected" full-output.log > test-output.log || echo "No errors found" > test-output.log

      - name: Show extracted errors
        if: always()
        run: cat test-output.log

      # - name: Classify Failure and Take Action
      #   if: failure()
      #   run: |
      #     node .github/scripts/classifyFailure.js
        
      - name: Stop Static Server
        run: |
          fuser -k 3000/tcp
  
  release-app-prod:
    runs-on: ubuntu-latest
    needs: [unit-test, build-app, release-app-stage, e2e-test]
    steps:
      - name: Skipped - Release to Production
        run: echo "Release to production is currently skipped."

